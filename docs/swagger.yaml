basePath: /api/v1
definitions:
  characters.AppearsIn:
    properties:
      game:
        example: true
        type: boolean
      nsfw:
        example: false
        type: boolean
      series:
        example: Persona 4
        type: string
      series_id:
        example: 2240
        type: integer
      western:
        example: false
        type: boolean
    type: object
  characters.Character:
    properties:
      age:
        example: 0
        type: integer
      appears_in:
        items:
          $ref: '#/definitions/characters.AppearsIn'
        type: array
      blood_type:
        example: "null"
        type: string
      bust_cm:
        example: 0
        type: number
      date_of_birth:
        example: "null"
        type: string
      description:
        example: Marie is an assistant of the Velvet Room in Persona 4 Golden. When Marie is first met, she seems to be a very cold and antisocial individual. She is sullen, cranky, sarcastic, irritable, very foul-mouthed and often prone to mood swings. She will not hesitate to voice out her opinion or express her thoughts, regardless of how it would make everyone feel. Marie sometimes expresses her thoughts in poems which often deal with depressing themes like farewells and existentialism, questioning her own origin. Besides this, Marie is into fashion, loves nature (another major theme in her poems) and is apparently concerned about her figure, which is why she only eats healthy food.
        type: string
      game:
        example: false
        type: boolean
      height_cm:
        example: 164
        type: number
      hip_cm:
        example: 0
        type: number
      id:
        example: 7960
        type: integer
      image_url:
        example: https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png
        type: string
      image_url_crop:
        example: https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png
        type: string
      name:
        example: Marie
        type: string
      nsfw:
        example: false
        type: boolean
      origin:
        example: Velvet Room
        type: string
      original_name:
        example: "null"
        type: string
      series:
        example: Persona 4
        type: string
      series_id:
        example: 2240
        type: integer
      series_nsfw:
        example: false
        type: boolean
      weight_kg:
        example: 0
        type: number
      western:
        example: false
        type: boolean
    type: object
  characters.CharacterImage:
    properties:
      character_id:
        example: 7960
        type: integer
      image_id:
        example: 1234
        type: integer
      image_url:
        example: https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png
        type: string
      image_url_crop:
        example: https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png
        type: string
      nsfw:
        example: false
        type: boolean
    type: object
  httputil.HTTPError:
    properties:
      message:
        example: Bad Request
        type: string
    type: object
  images.Image:
    properties:
      buffer_size:
        example: 402123
        type: number
      buffer_size_crop:
        example: 72288
        type: number
      character_id:
        example: 10739
        type: integer
      file_type:
        example: png
        type: string
      height:
        example: 2670
        type: number
      id:
        example: 187840
        type: integer
      image_url:
        example: ' https://cdn.bongo.best/characters/10739/6ae0800a-e3d8-43e2-b783-9eeb595fa30d.jpg'
        type: string
      image_url_crop:
        example: https://cdn.bongo.best/characters/187840/ab9b6e58-a055-4702-879a-7f3300c771f5.jpg
        type: string
      nsfw:
        example: false
        type: boolean
      width:
        example: 2420
        type: number
    type: object
  search.Search:
    properties:
      characters:
        items:
          $ref: '#/definitions/search.character'
        type: array
      series:
        items:
          $ref: '#/definitions/search.series'
        type: array
    type: object
  search.character:
    properties:
      game:
        example: false
        type: boolean
      id:
        example: 7960
        type: integer
      image_url:
        example: https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png
        type: string
      image_url_crop:
        example: https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png
        type: string
      name:
        example: Marie
        type: string
      nsfw:
        example: false
        type: boolean
      original_name:
        example: "null"
        type: string
      series:
        example: Persona 4
        type: string
      series_id:
        example: 2240
        type: integer
      series_nsfw:
        example: false
        type: boolean
      western:
        example: false
        type: boolean
    type: object
  search.series:
    properties:
      game:
        example: true
        type: boolean
      id:
        example: 4731
        type: integer
      name:
        example: Flight Rising
        type: string
      nsfw:
        example: false
        type: boolean
      western:
        example: true
        type: boolean
    type: object
  series.Series:
    properties:
      description:
        example: Flight Rising is a free Virtual Pet/breeding sim focusing on dragons. It launched on June 9th, 2013, following a wildly successful Kickstarter campaign.
        type: string
      game:
        example: true
        type: boolean
      id:
        example: 4731
        type: integer
      image_url:
        example: https://cdn.bongo.best/series/4731/e1dcff95-fa7c-4995-92f2-b9dc9840ffe1.png
        type: string
      name:
        example: Flight Rising
        type: string
      nsfw:
        example: false
        type: boolean
      original_name:
        example: "null"
        type: string
      western:
        example: true
        type: boolean
    type: object
info:
  contact:
    name: jgoralcz
    url: https://github.com/jgoralcz/cdbapi
  description: Character Database is a golang API used to get characters, series, and images stored in a PostgreSQL database.
  license: {}
  termsOfService: http://swagger.io/terms/
  title: Character Database (Go CDBAPI)
  version: "1.0"
paths:
  /characters:
    get:
      description: Get character metadata by nsfw (boolean), game (boolean), western (boolean), limit (1-20), name (string). You must use name to get a result back.
      parameters:
      - description: name to search
        in: query
        name: name
        required: true
        type: string
      - description: limit 1-20; Default 1
        in: query
        name: limit
        type: integer
      - description: whether the character is nsfw or not
        in: query
        name: nsfw
        type: boolean
      - description: whether the character is western (Cartoon) or not (Anime)
        in: query
        name: western
        type: boolean
      - description: whether the character is from a game or not
        in: query
        name: game
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/characters.Character'
            type: array
        "400":
          description: Must have a valid name query parameter
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: An unexpected error has occurred when retrieving the character
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Gets a character based off the user's query parameters.
      tags:
      - Character
  /characters/{id}:
    get:
      description: get character metadata by id
      parameters:
      - description: Some ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/characters.Character'
        "400":
          description: Must have a valid id parameter
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Could not find a character with id Some ID
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: An unexpected error has occurred when retrieving the character with id Some ID
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Gets a character by the ID
      tags:
      - Character
  /characters/{id}/images:
    get:
      description: Get the character's images between the requested offset and limit with the requested ID.
      parameters:
      - description: Some ID
        in: path
        name: id
        required: true
        type: integer
      - description: limit 1-10; Default 10
        in: query
        name: limit
        type: integer
      - description: the offset for the images for pagination
        in: query
        name: offset
        type: integer
      - description: whether the image is nsfw or not
        in: query
        name: nsfw
        type: boolean
      - description: filter down by cropped images only
        in: query
        name: crop
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/characters.CharacterImage'
            type: array
        "400":
          description: Invalid offset provided. Offset must be a valid number and greater than 0
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: An unexpected error has occurred when retrieving the images
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Gets a character's image based off the character's ID, offset, and limit
      tags:
      - Character
  /characters/random:
    get:
      description: Get a random character metadata by nsfw (boolean), game (boolean), western (boolean), limit (1-20).
      parameters:
      - description: limit 1-20; Default 1
        in: query
        name: limit
        type: integer
      - description: whether the character is nsfw or not
        in: query
        name: nsfw
        type: boolean
      - description: whether the character is western (Cartoon) or not (Anime)
        in: query
        name: western
        type: boolean
      - description: whether the character is from a game or not
        in: query
        name: game
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/characters.Character'
            type: array
        "500":
          description: An unexpected error has occurred when retrieving the character
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Gets a random character based off the user's query parameters.
      tags:
      - Character
  /images/{id}:
    get:
      description: Get detailed information on an image metadata based off the provided ID.
      parameters:
      - description: Some ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/images.Image'
            type: array
        "400":
          description: Must have a valid id parameter
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Image not found with id some ID
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: An unexpected error has occurred when retrieving the images for the character
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Gets an image's metadata based off the provided ID.
      tags:
      - Images
  /search:
    get:
      description: Search all resources by name (string), nsfw (boolean), game (boolean), western (boolean), limit (1-5), name (string). You must use name to get a result back.
      parameters:
      - description: name to search
        in: query
        name: name
        required: true
        type: string
      - description: limit 1-5; Default 5
        in: query
        name: limit
        type: integer
      - description: whether the search is nsfw or not
        in: query
        name: nsfw
        type: boolean
      - description: whether the search is western (Cartoon) or not (Anime)
        in: query
        name: western
        type: boolean
      - description: whether the search is from a game or not
        in: query
        name: game
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/search.Search'
            type: array
        "400":
          description: Must have a valid name query parameter
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: An unexpected error has occurred when searching
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Gets a "search" based off the user's query parameters.
      tags:
      - Search
  /series:
    get:
      description: Get series metadata by nsfw (boolean), game (boolean), western (boolean), limit (1-20), name (string). You must use name to get a result back.
      parameters:
      - description: name to search
        in: query
        name: name
        required: true
        type: string
      - description: limit 1-20; Default 1
        in: query
        name: limit
        type: integer
      - description: whether the series is nsfw or not
        in: query
        name: nsfw
        type: boolean
      - description: whether the series is western (Cartoon) or not (Anime)
        in: query
        name: western
        type: boolean
      - description: whether the series is from a game or not
        in: query
        name: game
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/series.Series'
            type: array
        "400":
          description: Must have a valid name query parameter
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: An unexpected error has occurred when retrieving the series
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Gets a series based off the user's query parameters.
      tags:
      - Series
  /series/{id}:
    get:
      description: get series metadata by id
      parameters:
      - description: Some ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/series.Series'
        "400":
          description: Must have a valid id parameter
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Could not find a series with id Some ID
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: An unexpected error has occurred when retrieving the series with id Some ID
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Gets a series by the ID
      tags:
      - Series
  /series/random:
    get:
      description: Get a random series metadata by nsfw (boolean), game (boolean), western (boolean), limit (1-20).
      parameters:
      - description: limit 1-20; Default 1
        in: query
        name: limit
        type: integer
      - description: whether the series is nsfw or not
        in: query
        name: nsfw
        type: boolean
      - description: whether the series is western (Cartoon) or not (Anime)
        in: query
        name: western
        type: boolean
      - description: whether the series is from a game or not
        in: query
        name: game
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/series.Series'
            type: array
        "500":
          description: An unexpected error has occurred when retrieving the series
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Gets a random series based off the user's query parameters.
      tags:
      - Series
swagger: "2.0"
