{
    "swagger": "2.0",
    "info": {
        "description": "Character Database is a golang API used to get characters, series, and images stored in a PostgreSQL database.",
        "title": "Character Database (Go CDBAPI)",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "jgoralcz",
            "url": "https://github.com/jgoralcz/cdbapi"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/characters": {
            "get": {
                "description": "Get character metadata by nsfw (boolean), game (boolean), western (boolean), limit (1-20), name (string). You must use name to get a result back.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Gets a character based off the user's query parameters.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name to search",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit 1-20; Default 1",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the character is nsfw or not",
                        "name": "nsfw",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the character is western (Cartoon) or not (Anime)",
                        "name": "western",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the character is from a game or not",
                        "name": "game",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/characters.Character"
                            }
                        }
                    },
                    "400": {
                        "description": "Must have a valid name query parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error has occurred when retrieving the character",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/characters/random": {
            "get": {
                "description": "Get a random character metadata by nsfw (boolean), game (boolean), western (boolean), limit (1-20).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Gets a random character based off the user's query parameters.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit 1-20; Default 1",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the character is nsfw or not",
                        "name": "nsfw",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the character is western (Cartoon) or not (Anime)",
                        "name": "western",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the character is from a game or not",
                        "name": "game",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/characters.Character"
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error has occurred when retrieving the character",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/characters/{id}": {
            "get": {
                "description": "get character metadata by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Gets a character by the ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Some ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/characters.Character"
                        }
                    },
                    "400": {
                        "description": "Must have a valid id parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Could not find a character with id Some ID",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error has occurred when retrieving the character with id Some ID",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/characters/{id}/images": {
            "get": {
                "description": "Get the character's images between the requested offset and limit with the requested ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Gets a character's image based off the character's ID, offset, and limit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Some ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit 1-10; Default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "the offset for the images for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the image is nsfw or not",
                        "name": "nsfw",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "filter down by cropped images only",
                        "name": "crop",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/characters.CharacterImage"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid offset provided. Offset must be a valid number and greater than 0",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error has occurred when retrieving the images",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/images/{id}": {
            "get": {
                "description": "Get detailed information on an image metadata based off the provided ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Images"
                ],
                "summary": "Gets an image's metadata based off the provided ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Some ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/images.Image"
                            }
                        }
                    },
                    "400": {
                        "description": "Must have a valid id parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Image not found with id some ID",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error has occurred when retrieving the images for the character",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Search all resources by name (string), nsfw (boolean), game (boolean), western (boolean), limit (1-5), name (string). You must use name to get a result back.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Gets a \"search\" based off the user's query parameters.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name to search",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit 1-5; Default 5",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the search is nsfw or not",
                        "name": "nsfw",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the search is western (Cartoon) or not (Anime)",
                        "name": "western",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the search is from a game or not",
                        "name": "game",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/search.Search"
                            }
                        }
                    },
                    "400": {
                        "description": "Must have a valid name query parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error has occurred when searching",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/series": {
            "get": {
                "description": "Get series metadata by nsfw (boolean), game (boolean), western (boolean), limit (1-20), name (string). You must use name to get a result back.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Series"
                ],
                "summary": "Gets a series based off the user's query parameters.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name to search",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit 1-20; Default 1",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the series is nsfw or not",
                        "name": "nsfw",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the series is western (Cartoon) or not (Anime)",
                        "name": "western",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the series is from a game or not",
                        "name": "game",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/series.Series"
                            }
                        }
                    },
                    "400": {
                        "description": "Must have a valid name query parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error has occurred when retrieving the series",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/series/random": {
            "get": {
                "description": "Get a random series metadata by nsfw (boolean), game (boolean), western (boolean), limit (1-20).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Series"
                ],
                "summary": "Gets a random series based off the user's query parameters.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit 1-20; Default 1",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the series is nsfw or not",
                        "name": "nsfw",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the series is western (Cartoon) or not (Anime)",
                        "name": "western",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether the series is from a game or not",
                        "name": "game",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/series.Series"
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error has occurred when retrieving the series",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/series/{id}": {
            "get": {
                "description": "get series metadata by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Series"
                ],
                "summary": "Gets a series by the ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Some ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/series.Series"
                        }
                    },
                    "400": {
                        "description": "Must have a valid id parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Could not find a series with id Some ID",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error has occurred when retrieving the series with id Some ID",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "characters.AppearsIn": {
            "type": "object",
            "properties": {
                "game": {
                    "type": "boolean",
                    "example": true
                },
                "nsfw": {
                    "type": "boolean",
                    "example": false
                },
                "series": {
                    "type": "string",
                    "example": "Persona 4"
                },
                "series_id": {
                    "type": "integer",
                    "example": 2240
                },
                "western": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "characters.Character": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 0
                },
                "appears_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/characters.AppearsIn"
                    }
                },
                "blood_type": {
                    "type": "string",
                    "example": "null"
                },
                "bust_cm": {
                    "type": "number",
                    "example": 0
                },
                "date_of_birth": {
                    "type": "string",
                    "example": "null"
                },
                "description": {
                    "type": "string",
                    "example": "Marie is an assistant of the Velvet Room in Persona 4 Golden. When Marie is first met, she seems to be a very cold and antisocial individual. She is sullen, cranky, sarcastic, irritable, very foul-mouthed and often prone to mood swings. She will not hesitate to voice out her opinion or express her thoughts, regardless of how it would make everyone feel. Marie sometimes expresses her thoughts in poems which often deal with depressing themes like farewells and existentialism, questioning her own origin. Besides this, Marie is into fashion, loves nature (another major theme in her poems) and is apparently concerned about her figure, which is why she only eats healthy food."
                },
                "game": {
                    "type": "boolean",
                    "example": false
                },
                "height_cm": {
                    "type": "number",
                    "example": 164
                },
                "hip_cm": {
                    "type": "number",
                    "example": 0
                },
                "id": {
                    "type": "integer",
                    "example": 7960
                },
                "image_url": {
                    "type": "string",
                    "example": "https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png"
                },
                "image_url_crop": {
                    "type": "string",
                    "example": "https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png"
                },
                "name": {
                    "type": "string",
                    "example": "Marie"
                },
                "nsfw": {
                    "type": "boolean",
                    "example": false
                },
                "series": {
                    "type": "string",
                    "example": "Persona 4"
                },
                "series_id": {
                    "type": "integer",
                    "example": 2240
                },
                "series_nsfw": {
                    "type": "boolean",
                    "example": false
                },
                "weight_kg": {
                    "type": "number",
                    "example": 0
                },
                "western": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "characters.CharacterImage": {
            "type": "object",
            "properties": {
                "character_id": {
                    "type": "integer",
                    "example": 7960
                },
                "image_id": {
                    "type": "integer",
                    "example": 1234
                },
                "image_url": {
                    "type": "string",
                    "example": "https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png"
                },
                "image_url_crop": {
                    "type": "string",
                    "example": "https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png"
                },
                "nsfw": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "images.Image": {
            "type": "object",
            "properties": {
                "buffer_size": {
                    "type": "number",
                    "example": 402123
                },
                "buffer_size_crop": {
                    "type": "number",
                    "example": 72288
                },
                "character_id": {
                    "type": "integer",
                    "example": 10739
                },
                "file_type": {
                    "type": "string",
                    "example": "png"
                },
                "height": {
                    "type": "number",
                    "example": 2670
                },
                "id": {
                    "type": "integer",
                    "example": 187840
                },
                "image_url": {
                    "type": "string",
                    "example": " https://cdn.bongo.best/characters/10739/6ae0800a-e3d8-43e2-b783-9eeb595fa30d.jpg"
                },
                "image_url_crop": {
                    "type": "string",
                    "example": "https://cdn.bongo.best/characters/187840/ab9b6e58-a055-4702-879a-7f3300c771f5.jpg"
                },
                "nsfw": {
                    "type": "boolean",
                    "example": false
                },
                "width": {
                    "type": "number",
                    "example": 2420
                }
            }
        },
        "search.Search": {
            "type": "object",
            "properties": {
                "characters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/search.character"
                    }
                },
                "series": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/search.series"
                    }
                }
            }
        },
        "search.character": {
            "type": "object",
            "properties": {
                "game": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "integer",
                    "example": 7960
                },
                "image_url": {
                    "type": "string",
                    "example": "https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png"
                },
                "image_url_crop": {
                    "type": "string",
                    "example": "https://cdn.bongo.best/characters/7960/82736d1f-fa95-4f6e-ae78-f9422f065202_thumb.png"
                },
                "name": {
                    "type": "string",
                    "example": "Marie"
                },
                "nsfw": {
                    "type": "boolean",
                    "example": false
                },
                "original_name": {
                    "type": "string",
                    "example": "null"
                },
                "series": {
                    "type": "string",
                    "example": "Persona 4"
                },
                "series_id": {
                    "type": "integer",
                    "example": 2240
                },
                "series_nsfw": {
                    "type": "boolean",
                    "example": false
                },
                "western": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "search.series": {
            "type": "object",
            "properties": {
                "game": {
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "type": "integer",
                    "example": 4731
                },
                "name": {
                    "type": "string",
                    "example": "Flight Rising"
                },
                "nsfw": {
                    "type": "boolean",
                    "example": false
                },
                "western": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "series.Series": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Flight Rising is a free Virtual Pet/breeding sim focusing on dragons. It launched on June 9th, 2013, following a wildly successful Kickstarter campaign."
                },
                "game": {
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "type": "integer",
                    "example": 4731
                },
                "image_url": {
                    "type": "string",
                    "example": "https://cdn.bongo.best/series/4731/e1dcff95-fa7c-4995-92f2-b9dc9840ffe1.png"
                },
                "name": {
                    "type": "string",
                    "example": "Flight Rising"
                },
                "nsfw": {
                    "type": "boolean",
                    "example": false
                },
                "original_name": {
                    "type": "string",
                    "example": "null"
                },
                "western": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}